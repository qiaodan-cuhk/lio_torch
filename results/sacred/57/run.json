{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/home/qiaodan/Projects/lio_torch/src",
    "dependencies": [
      "munch==2.5.0",
      "numpy==1.19.0",
      "PyYAML==5.3.1",
      "sacred==0.8.1",
      "torch==1.12.1+cu116"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "648a3eb749cc14b781934cfc021385691cbcf646",
        "dirty": true,
        "url": "git@github.com:qiaodan-cuhk/lio_torch.git"
      },
      {
        "commit": "648a3eb749cc14b781934cfc021385691cbcf646",
        "dirty": true,
        "url": "git@github.com:qiaodan-cuhk/lio_torch.git"
      },
      {
        "commit": "648a3eb749cc14b781934cfc021385691cbcf646",
        "dirty": true,
        "url": "git@github.com:qiaodan-cuhk/lio_torch.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources/main_8da888c09b24337c968cc6e52df39bfd.py"
      ],
      [
        "run.py",
        "_sources/run_df94deb4d73d28081fc8084503e419b5.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_65f5f7566a9f1808d21dcae06c17d727.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/home/qiaodan/anaconda3/envs/LIO/lib/python3.7/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/home/qiaodan/Projects/lio_torch/src/main.py\", line 37, in my_main\n    run(_run, config, _log)\n",
    "  File \"/home/qiaodan/Projects/lio_torch/src/run.py\", line 53, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/home/qiaodan/Projects/lio_torch/src/run.py\", line 135, in run_sequential\n    device=\"cpu\" if args.buffer_cpu_only else args.device)\n",
    "  File \"/home/qiaodan/Projects/lio_torch/src/components/episode_buffer.py\", line 212, in __init__\n    super(ReplayBuffer, self).__init__(scheme, groups, buffer_size, max_seq_length, preprocess=preprocess, device=device)\n",
    "  File \"/home/qiaodan/Projects/lio_torch/src/components/episode_buffer.py\", line 28, in __init__\n    self._setup_data(self.scheme, self.groups, batch_size, max_seq_length, self.preprocess)\n",
    "  File \"/home/qiaodan/Projects/lio_torch/src/components/episode_buffer.py\", line 75, in _setup_data\n    self.data.transition_data[field_key] = th.zeros((batch_size, max_seq_length, *shape), dtype=dtype, device=self.device)\n",
    "TypeError: zeros(): argument 'size' must be tuple of ints, but found element of type tuple at pos 3\n"
  ],
  "heartbeat": "2024-11-17T08:32:40.065679",
  "host": {
    "ENV": {},
    "cpu": "AMD Ryzen Threadripper 3990X 64-Core Processor",
    "gpus": {
      "driver_version": "535.129.03",
      "gpus": [
        {
          "model": "NVIDIA GeForce RTX 3090",
          "persistence_mode": false,
          "total_memory": 24576
        },
        {
          "model": "NVIDIA GeForce RTX 3090",
          "persistence_mode": false,
          "total_memory": 24576
        }
      ]
    },
    "hostname": "ubun",
    "os": [
      "Linux",
      "Linux-5.15.0-101-generic-x86_64-with-debian-bullseye-sid"
    ],
    "python_version": "3.7.13"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2024-11-17T08:32:37.240022",
  "status": "FAILED",
  "stop_time": "2024-11-17T08:32:40.069547"
}